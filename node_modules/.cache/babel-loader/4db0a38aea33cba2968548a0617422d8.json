{"ast":null,"code":"var _excluded = [\"children\", \"className\", \"disabled\", \"disabledClassName\", \"focus\", \"id\", \"panelId\", \"selected\", \"selectedClassName\", \"tabIndex\", \"tabRef\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport cx from 'clsx';\nvar DEFAULT_CLASS = 'react-tabs__tab';\nvar Tab = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Tab, _Component);\n  function Tab() {\n    return _Component.apply(this, arguments) || this;\n  }\n  var _proto = Tab.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    this.checkFocus();\n  };\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.checkFocus();\n  };\n  _proto.checkFocus = function checkFocus() {\n    var _this$props = this.props,\n      selected = _this$props.selected,\n      focus = _this$props.focus;\n    if (selected && focus) {\n      this.node.focus();\n    }\n  };\n  _proto.render = function render() {\n    var _cx,\n      _this = this;\n    var _this$props2 = this.props,\n      children = _this$props2.children,\n      className = _this$props2.className,\n      disabled = _this$props2.disabled,\n      disabledClassName = _this$props2.disabledClassName,\n      focus = _this$props2.focus,\n      id = _this$props2.id,\n      panelId = _this$props2.panelId,\n      selected = _this$props2.selected,\n      selectedClassName = _this$props2.selectedClassName,\n      tabIndex = _this$props2.tabIndex,\n      tabRef = _this$props2.tabRef,\n      attributes = _objectWithoutPropertiesLoose(_this$props2, _excluded);\n    return /*#__PURE__*/React.createElement(\"li\", _extends({}, attributes, {\n      className: cx(className, (_cx = {}, _cx[selectedClassName] = selected, _cx[disabledClassName] = disabled, _cx)),\n      ref: function ref(node) {\n        _this.node = node;\n        if (tabRef) tabRef(node);\n      },\n      role: \"tab\",\n      id: id,\n      \"aria-selected\": selected ? 'true' : 'false',\n      \"aria-disabled\": disabled ? 'true' : 'false',\n      \"aria-controls\": panelId,\n      tabIndex: tabIndex || (selected ? '0' : null),\n      \"data-rttab\": true\n    }), children);\n  };\n  return Tab;\n}(Component);\nTab.defaultProps = {\n  className: DEFAULT_CLASS,\n  disabledClassName: DEFAULT_CLASS + \"--disabled\",\n  focus: false,\n  id: null,\n  panelId: null,\n  selected: false,\n  selectedClassName: DEFAULT_CLASS + \"--selected\"\n};\nexport { Tab as default };\nTab.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n  disabled: PropTypes.bool,\n  tabIndex: PropTypes.string,\n  disabledClassName: PropTypes.string,\n  focus: PropTypes.bool,\n  // private\n  id: PropTypes.string,\n  // private\n  panelId: PropTypes.string,\n  // private\n  selected: PropTypes.bool,\n  // private\n  selectedClassName: PropTypes.string,\n  tabRef: PropTypes.func // private\n} : {};\nTab.tabsRole = 'Tab';","map":null,"metadata":{},"sourceType":"module"}