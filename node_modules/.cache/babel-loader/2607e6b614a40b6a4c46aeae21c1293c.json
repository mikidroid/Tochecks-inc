{"ast":null,"code":"var __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar _ShapeManager_engine;\nconst shapes = new Map();\nexport class ShapeManager {\n  constructor(engine) {\n    _ShapeManager_engine.set(this, void 0);\n    __classPrivateFieldSet(this, _ShapeManager_engine, engine, \"f\");\n  }\n  addShape(name, drawer) {\n    if (!this.getShape(name)) {\n      shapes.set(name, drawer);\n    }\n  }\n  getShape(name) {\n    return shapes.get(name);\n  }\n  getSupportedShapes() {\n    return shapes.keys();\n  }\n}\n_ShapeManager_engine = new WeakMap();","map":null,"metadata":{},"sourceType":"module"}