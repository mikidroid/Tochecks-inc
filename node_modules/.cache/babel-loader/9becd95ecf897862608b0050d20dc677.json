{"ast":null,"code":"import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n  constructor() {\n    this.detectsOn = \"window\";\n    this.events = new Events();\n    this.modes = new Modes();\n  }\n  get detect_on() {\n    return this.detectsOn;\n  }\n  set detect_on(value) {\n    this.detectsOn = value;\n  }\n  load(data) {\n    var _a, _b, _c;\n    if (data === undefined) {\n      return;\n    }\n    const detectsOn = (_a = data.detectsOn) !== null && _a !== void 0 ? _a : data.detect_on;\n    if (detectsOn !== undefined) {\n      this.detectsOn = detectsOn;\n    }\n    this.events.load(data.events);\n    this.modes.load(data.modes);\n    if (((_c = (_b = data.modes) === null || _b === void 0 ? void 0 : _b.slow) === null || _c === void 0 ? void 0 : _c.active) === true) {\n      if (this.events.onHover.mode instanceof Array) {\n        if (this.events.onHover.mode.indexOf(\"slow\") < 0) {\n          this.events.onHover.mode.push(\"slow\");\n        }\n      } else if (this.events.onHover.mode !== \"slow\") {\n        this.events.onHover.mode = [this.events.onHover.mode, \"slow\"];\n      }\n    }\n  }\n}","map":null,"metadata":{},"sourceType":"module"}