{"ast":null,"code":"/* SmtpJS.com - v3.0.0 */\nexport default {\n  send: function (a) {\n    return new Promise(function (n, e) {\n      a.nocache = Math.floor(1e6 * Math.random() + 1), a.Action = \"Send\";\n      var t = JSON.stringify(a);\n      this.ajaxPost(\"https://smtpjs.com/v3/smtpjs.aspx?\", t, function (e) {\n        n(e);\n      });\n    });\n  },\n  ajaxPost: function (e, n, t) {\n    var a = this.createCORSRequest(\"POST\", e);\n    a.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\"), a.onload = function () {\n      var e = a.responseText;\n      null != t && t(e);\n    }, a.send(n);\n  },\n  ajax: function (e, n) {\n    var t = this.createCORSRequest(\"GET\", e);\n    t.onload = function () {\n      var e = t.responseText;\n      null != n && n(e);\n    }, t.send();\n  },\n  createCORSRequest: function (e, n) {\n    var t = new XMLHttpRequest();\n    return \"withCredentials\" in t ? t.open(e, n, !0) : \"undefined\" != typeof XDomainRequest ? (t = new XDomainRequest()).open(e, n) : t = null, t;\n  }\n};","map":{"version":3,"names":["send","a","Promise","n","e","nocache","Math","floor","random","Action","t","JSON","stringify","ajaxPost","createCORSRequest","setRequestHeader","onload","responseText","ajax","XMLHttpRequest","open","XDomainRequest"],"sources":["/data/data/com.termux/files/home/projects/tochex-portfolio/src/config/smtp-mail.js"],"sourcesContent":["/* SmtpJS.com - v3.0.0 */\r\nexport default  { send: function (a) { return new Promise(function (n, e) { a.nocache = Math.floor(1e6 * Math.random() + 1), a.Action = \"Send\"; var t = JSON.stringify(a); this.ajaxPost(\"https://smtpjs.com/v3/smtpjs.aspx?\", t, function (e) { n(e) }) }) }, ajaxPost: function (e, n, t) { var a = this.createCORSRequest(\"POST\", e); a.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\"), a.onload = function () { var e = a.responseText; null != t && t(e) }, a.send(n) }, ajax: function (e, n) { var t = this.createCORSRequest(\"GET\", e); t.onload = function () { var e = t.responseText; null != n && n(e) }, t.send() }, createCORSRequest: function (e, n) { var t = new XMLHttpRequest; return \"withCredentials\" in t ? t.open(e, n, !0) : \"undefined\" != typeof XDomainRequest ? (t = new XDomainRequest).open(e, n) : t = null, t } };"],"mappings":"AAAA;AACA,eAAgB;EAAEA,IAAI,EAAE,UAAUC,CAAC,EAAE;IAAE,OAAO,IAAIC,OAAO,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;MAAEH,CAAC,CAACI,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAC,GAAG,GAAGD,IAAI,CAACE,MAAM,EAAE,GAAG,CAAC,CAAC,EAAEP,CAAC,CAACQ,MAAM,GAAG,MAAM;MAAE,IAAIC,CAAC,GAAGC,IAAI,CAACC,SAAS,CAACX,CAAC,CAAC;MAAE,IAAI,CAACY,QAAQ,CAAC,oCAAoC,EAAEH,CAAC,EAAE,UAAUN,CAAC,EAAE;QAAED,CAAC,CAACC,CAAC,CAAC;MAAC,CAAC,CAAC;IAAC,CAAC,CAAC;EAAC,CAAC;EAAES,QAAQ,EAAE,UAAUT,CAAC,EAAED,CAAC,EAAEO,CAAC,EAAE;IAAE,IAAIT,CAAC,GAAG,IAAI,CAACa,iBAAiB,CAAC,MAAM,EAAEV,CAAC,CAAC;IAAEH,CAAC,CAACc,gBAAgB,CAAC,cAAc,EAAE,mCAAmC,CAAC,EAAEd,CAAC,CAACe,MAAM,GAAG,YAAY;MAAE,IAAIZ,CAAC,GAAGH,CAAC,CAACgB,YAAY;MAAE,IAAI,IAAIP,CAAC,IAAIA,CAAC,CAACN,CAAC,CAAC;IAAC,CAAC,EAAEH,CAAC,CAACD,IAAI,CAACG,CAAC,CAAC;EAAC,CAAC;EAAEe,IAAI,EAAE,UAAUd,CAAC,EAAED,CAAC,EAAE;IAAE,IAAIO,CAAC,GAAG,IAAI,CAACI,iBAAiB,CAAC,KAAK,EAAEV,CAAC,CAAC;IAAEM,CAAC,CAACM,MAAM,GAAG,YAAY;MAAE,IAAIZ,CAAC,GAAGM,CAAC,CAACO,YAAY;MAAE,IAAI,IAAId,CAAC,IAAIA,CAAC,CAACC,CAAC,CAAC;IAAC,CAAC,EAAEM,CAAC,CAACV,IAAI,EAAE;EAAC,CAAC;EAAEc,iBAAiB,EAAE,UAAUV,CAAC,EAAED,CAAC,EAAE;IAAE,IAAIO,CAAC,GAAG,IAAIS,cAAc;IAAE,OAAO,iBAAiB,IAAIT,CAAC,GAAGA,CAAC,CAACU,IAAI,CAAChB,CAAC,EAAED,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,WAAW,IAAI,OAAOkB,cAAc,GAAG,CAACX,CAAC,GAAG,IAAIW,cAAc,IAAED,IAAI,CAAChB,CAAC,EAAED,CAAC,CAAC,GAAGO,CAAC,GAAG,IAAI,EAAEA,CAAC;EAAC;AAAE,CAAC"},"metadata":{},"sourceType":"module"}