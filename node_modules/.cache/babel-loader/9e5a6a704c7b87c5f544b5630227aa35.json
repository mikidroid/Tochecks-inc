{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport ModalManager from 'react-overlays/ModalManager';\nvar Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nvar BootstrapModalManager = /*#__PURE__*/function (_ModalManager) {\n  _inheritsLoose(BootstrapModalManager, _ModalManager);\n  function BootstrapModalManager() {\n    return _ModalManager.apply(this, arguments) || this;\n  }\n  var _proto = BootstrapModalManager.prototype;\n  _proto.adjustAndStore = function adjustAndStore(prop, element, adjust) {\n    var _css;\n    var actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, (_css = {}, _css[prop] = parseFloat(css(element, prop)) + adjust + \"px\", _css));\n  };\n  _proto.restore = function restore(prop, element) {\n    var value = element.dataset[prop];\n    if (value !== undefined) {\n      var _css2;\n      delete element.dataset[prop];\n      css(element, (_css2 = {}, _css2[prop] = value, _css2));\n    }\n  };\n  _proto.setContainerStyle = function setContainerStyle(containerState, container) {\n    var _this = this;\n    _ModalManager.prototype.setContainerStyle.call(this, containerState, container);\n    if (!containerState.overflowing) return;\n    var size = getScrollbarSize();\n    qsa(container, Selector.FIXED_CONTENT).forEach(function (el) {\n      return _this.adjustAndStore('paddingRight', el, size);\n    });\n    qsa(container, Selector.STICKY_CONTENT).forEach(function (el) {\n      return _this.adjustAndStore('marginRight', el, -size);\n    });\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(function (el) {\n      return _this.adjustAndStore('marginRight', el, size);\n    });\n  };\n  _proto.removeContainerStyle = function removeContainerStyle(containerState, container) {\n    var _this2 = this;\n    _ModalManager.prototype.removeContainerStyle.call(this, containerState, container);\n    qsa(container, Selector.FIXED_CONTENT).forEach(function (el) {\n      return _this2.restore('paddingRight', el);\n    });\n    qsa(container, Selector.STICKY_CONTENT).forEach(function (el) {\n      return _this2.restore('marginRight', el);\n    });\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(function (el) {\n      return _this2.restore('marginRight', el);\n    });\n  };\n  return BootstrapModalManager;\n}(ModalManager);\nexport { BootstrapModalManager as default };","map":null,"metadata":{},"sourceType":"module"}