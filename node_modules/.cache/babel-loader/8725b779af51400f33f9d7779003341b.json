{"ast":null,"code":"import { Range } from \"./Range\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n  constructor(x, y, radius) {\n    super(x, y);\n    this.radius = radius;\n  }\n  contains(point) {\n    return getDistance(point, this.position) <= this.radius;\n  }\n  intersects(range) {\n    const rect = range,\n      circle = range,\n      pos1 = this.position,\n      pos2 = range.position,\n      xDist = Math.abs(pos2.x - pos1.x),\n      yDist = Math.abs(pos2.y - pos1.y),\n      r = this.radius;\n    if (circle.radius !== undefined) {\n      const rSum = r + circle.radius,\n        dist = Math.sqrt(xDist * xDist + yDist + yDist);\n      return rSum > dist;\n    } else if (rect.size !== undefined) {\n      const w = rect.size.width,\n        h = rect.size.height,\n        edges = Math.pow(xDist - w, 2) + Math.pow(yDist - h, 2);\n      if (xDist > r + w || yDist > r + h) {\n        return false;\n      }\n      if (xDist <= w || yDist <= h) {\n        return true;\n      }\n      return edges <= r * r;\n    }\n    return false;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}