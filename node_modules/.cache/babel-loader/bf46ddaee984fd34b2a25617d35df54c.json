{"ast":null,"code":"import { PolygonMaskDraw } from \"./PolygonMaskDraw\";\nimport { PolygonMaskInline } from \"./PolygonMaskInline\";\nimport { PolygonMaskLocalSvg } from \"./PolygonMaskLocalSvg\";\nimport { PolygonMaskMove } from \"./PolygonMaskMove\";\nimport { deepExtend } from \"../../../../Utils/Utils\";\nexport class PolygonMask {\n  constructor() {\n    this.draw = new PolygonMaskDraw();\n    this.enable = false;\n    this.inline = new PolygonMaskInline();\n    this.move = new PolygonMaskMove();\n    this.scale = 1;\n    this.type = \"none\";\n  }\n  get inlineArrangement() {\n    return this.inline.arrangement;\n  }\n  set inlineArrangement(value) {\n    this.inline.arrangement = value;\n  }\n  load(data) {\n    var _a;\n    if (!data) {\n      return;\n    }\n    this.draw.load(data.draw);\n    const inline = (_a = data.inline) !== null && _a !== void 0 ? _a : {\n      arrangement: data.inlineArrangement\n    };\n    if (inline !== undefined) {\n      this.inline.load(inline);\n    }\n    this.move.load(data.move);\n    if (data.scale !== undefined) {\n      this.scale = data.scale;\n    }\n    if (data.type !== undefined) {\n      this.type = data.type;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    } else {\n      this.enable = this.type !== \"none\";\n    }\n    if (data.url !== undefined) {\n      this.url = data.url;\n    }\n    if (data.data !== undefined) {\n      if (typeof data.data === \"string\") {\n        this.data = data.data;\n      } else {\n        this.data = new PolygonMaskLocalSvg();\n        this.data.load(data.data);\n      }\n    }\n    if (data.position !== undefined) {\n      this.position = deepExtend({}, data.position);\n    }\n  }\n}","map":null,"metadata":{},"sourceType":"module"}